// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Game {
  id           Int            @id @default(autoincrement())
  name         String
  description  String?
  bggId        String?
  bggThumbnail String?
  categories   GameCategory[]
  plays        Play[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model GameCategory {
  id    Int    @id @default(autoincrement())
  name  String @unique
  games Game[]
}

model Play {
  id        Int          @id @default(autoincrement())
  game      Game         @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gameId    Int
  sessions  Session[]
  players   PlayerPlay[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Session {
  id         Int       @id @default(autoincrement())
  play       Play      @relation(fields: [playId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  playId     Int
  startedAt  DateTime  @default(now())
  finishedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Player {
  id        Int          @id @default(autoincrement())
  name      String
  plays     PlayerPlay[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model PlayerPlay {
  player    Player   @relation(fields: [playerId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  playerId  Int
  play      Play     @relation(fields: [playId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  playId    Int
  score     Float?   @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([playerId, playId])
}
